{"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"text","text":"- ("},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"},{"text":"(","kind":"text"},{"text":"void","preciseIdentifier":"c:v","kind":"typeIdentifier"},{"text":" (^","kind":"text"},{"text":")(","kind":"text"},{"text":"NSError","preciseIdentifier":"c:objc(cs)NSError","kind":"typeIdentifier"},{"kind":"text","text":" * "},{"kind":"internalParam","text":"error"},{"kind":"text","text":")) "},{"kind":"internalParam","text":"completion"},{"kind":"text","text":";"}],"platforms":["iOS"],"languages":["occ"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The completion handler to call once the ambient cache has","type":"text"},{"type":"text","text":" "},{"type":"text","text":"been revalidated. This handler is executed asynchronously on the main queue."}],"type":"paragraph"}],"name":"completion"}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This is recommended over clearing the cache or resetting the database","type":"text"},{"type":"text","text":" "},{"type":"text","text":"because valid local tiles will not be downloaded again."}]},{"inlineContent":[{"type":"text","text":"Resources shared with offline packs will not be affected by this method."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:"]}],"metadata":{"title":"invalidateAmbientCacheWithCompletionHandler:","navigatorTitle":[{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"roleHeading":"Instance Method","externalID":"c:objc(cs)MLNOfflineStorage(im)invalidateAmbientCacheWithCompletionHandler:","symbolKind":"method","role":"symbol","modules":[{"name":"MapLibre"}],"fragments":[{"text":"- ","kind":"text"},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage"]]},"identifier":{"url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:","interfaceLanguage":"occ"},"abstract":[{"text":"Invalidates the ambient cache. This method checks that the tiles in the","type":"text"},{"type":"text","text":" "},{"text":"ambient cache match those from the server. If the local tiles do not match","type":"text"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}],"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage/invalidateAmbientCacheWithCompletionHandler:":{"abstract":[{"type":"text","text":"Invalidates the ambient cache. This method checks that the tiles in the"},{"text":" ","type":"text"},{"text":"ambient cache match those from the server. If the local tiles do not match","type":"text"},{"text":" ","type":"text"},{"text":"those on the server, they are re-downloaded.","type":"text"}],"type":"topic","fragments":[{"kind":"text","text":"- "},{"text":"invalidateAmbientCacheWithCompletionHandler:","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"invalidateAmbientCacheWithCompletionHandler:"}],"role":"symbol","title":"invalidateAmbientCacheWithCompletionHandler:","kind":"symbol","url":"\/documentation\/maplibre\/mlnofflinestorage\/invalidateambientcachewithcompletionhandler:","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage\/invalidateAmbientCacheWithCompletionHandler:"},"doc://org.swift.MyProject/documentation/MapLibre":{"kind":"symbol","type":"topic","abstract":[{"text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling.","type":"text"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","url":"\/documentation\/maplibre","title":"MapLibre","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNOfflineStorage":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNOfflineStorage","abstract":[{"text":"MLNOfflineStorage implements a singleton (shared object) that manages offline","type":"text"},{"type":"text","text":" "},{"text":"packs and ambient caching. All of this classâ€™s instance methods are asynchronous,","type":"text"},{"text":" ","type":"text"},{"text":"reflecting the fact that offline resources are stored in a database. The shared","type":"text"},{"type":"text","text":" "},{"type":"text","text":"object maintains a canonical collection of offline packs in its "},{"code":"packs","type":"codeVoice"},{"text":" property.","type":"text"}],"url":"\/documentation\/maplibre\/mlnofflinestorage","kind":"symbol","role":"symbol","type":"topic","title":"MLNOfflineStorage","fragments":[{"text":"MLNOfflineStorage","kind":"identifier"}]}}}