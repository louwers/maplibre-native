{"metadata":{"title":"lineOpacity","symbolKind":"property","modules":[{"name":"MapLibre"}],"fragments":[{"kind":"identifier","text":"lineOpacity"}],"role":"symbol","externalID":"c:objc(cs)MLNLineStyleLayer(py)lineOpacity","roleHeading":"Instance Property","navigatorTitle":[{"text":"lineOpacity","kind":"identifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/org.swift.MyProject\/documentation\/MapLibre","doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer"]]},"abstract":[{"type":"text","text":"The opacity at which the line will be drawn."}],"variants":[{"paths":["\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity"],"traits":[{"interfaceLanguage":"occ"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":") "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSExpression","text":"NSExpression"},{"kind":"text","text":" * "},{"kind":"identifier","text":"lineOpacity"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["iOS"]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The default value of this property is an expression that evaluates to the float"},{"text":" ","type":"text"},{"type":"codeVoice","code":"1"},{"type":"text","text":". Set this property to "},{"type":"codeVoice","code":"nil"},{"text":" to reset it to the default value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can set this property to an expression containing any of the following:"}],"type":"paragraph"},{"inlineContent":[{"text":"Constant numeric values between 0 and 1 inclusive","type":"text"},{"type":"text","text":" "},{"text":"Predefined functions, including mathematical and string operators","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Conditional expressions"},{"text":" ","type":"text"},{"type":"text","text":"Variable assignments and references to assigned variables"},{"type":"text","text":" "},{"type":"text","text":"Interpolation and step functions applied to the "},{"code":"$zoomLevel","type":"codeVoice"},{"type":"text","text":" variable and\/or"},{"text":" ","type":"text"},{"type":"text","text":"feature attributes"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"identifier":{"interfaceLanguage":"occ","url":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity"},"references":{"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer/lineOpacity":{"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer\/lineOpacity","title":"lineOpacity","url":"\/documentation\/maplibre\/mlnlinestylelayer\/lineopacity","abstract":[{"text":"The opacity at which the line will be drawn.","type":"text"}],"fragments":[{"text":"lineOpacity","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://org.swift.MyProject/documentation/MapLibre":{"abstract":[{"type":"text","text":"Powerful, free and open-source mapping toolkit with full control over data sources and styling."}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre","kind":"symbol","title":"MapLibre","url":"\/documentation\/maplibre","type":"topic","role":"collection"},"doc://org.swift.MyProject/documentation/MapLibre/MLNLineStyleLayer":{"kind":"symbol","url":"\/documentation\/maplibre\/mlnlinestylelayer","role":"symbol","fragments":[{"text":"MLNLineStyleLayer","kind":"identifier"}],"identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","title":"MLNLineStyleLayer","type":"topic","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/org.swift.MyProject\/documentation\/MapLibre\/MLNLineStyleLayer","isActive":true},{"text":" is a style layer that renders one or more stroked","type":"text"},{"type":"text","text":" "},{"text":"polylines on the map.","type":"text"}]}}}